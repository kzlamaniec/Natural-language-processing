for (doc_no in 1:length(corpus)) {
print(rownames(dtm_tf_612_m)[doc_no])
print(head(sort(dtm_tf_612_m[doc_no,], decreasing = T)))
}
# waga tf jako miara ważności słów w dokumentach
for (doc_no in 1:length(corpus)) {
print(rownames(dtm_tf_all_m)[doc_no])
print(head(sort(dtm_tf_all_m[doc_no,], decreasing = T)))
}
# waga tf_612 jako miara ważności słów w dokumentach
for (doc_no in 1:length(corpus)) {
print(rownames(dtm_tf_612_m)[doc_no])
print(head(sort(dtm_tf_612_m[doc_no,], decreasing = T)))
}
View(dtm_tf_all)
View(dtm_tf_all)
View(dtm_tf_all_m)
View(dtm_tf_all_m)
# kolory
cols = c("lightsteelblue", "orchid", "royalblue","darkseagreen1", "cyan4", "navy" , "mediumpurple1")
### Redukcja wymiarów macierzy ###
#przygotowanie
clusters_pattern <- c(1,1,1,1,2,2,2,2,3,3,3,3,5,5,5,5,6,6,6,6)
cols_pattern <- cols[clusters_pattern]
names(clusters_pattern) <- doc_names
names(cols_pattern) <- doc_names
# utworzenie katalogu na wyniki
reduction_dir <- "./reduction"
dir.create(reduction_dir)
# legenda
#matrix
doc_names <- rownames(dtm_tf_all)
doc_count <- length(doc_names)
legend <- paste(
paste(
"d",
1:doc_count,
sep = ""
),
doc_names,
sep = " -> "
)
options(scipen = 5)
#experiment matrix
exp_matrix <- dtm_tf_all
#exp_matrix <- dtm_tf_612
#exp_matrix <- dtm_tfidf_410
## Analiza głównych składowych
pca_model <- prcomp(exp_matrix)
x <- pca_model$x[,1]
y <- pca_model$x[,2]
plot_file <- paste(
reduction_dir,
"pca.png",
sep = "/"
)
png(plot_file, width = 800)
par(mar = c(4, 4, 4, 25), xpd = TRUE)
plot(
x,
y,
main = "Analiza głównych składowych",
xlab = "PC1",
ylab = "PC2",
col = cols_pattern,
pch = 16
)
text(
x,
y,
paste(
"d",
1:doc_count,
sep = ""
),
col = cols_pattern,
pos = 1
)
legend(
"topright",
inset = c(-0.9, 0.1),
legend,
text.col = cols_pattern
)
dev.off()
### Dekompozycja według wartości osobliwych ###
#experiment matrix
exp_matrix <- tdm_tf_all
#exp_matrix <- tdm_tf_612
#exp_matrix <- tdm_tfidf_410
# analiza ukrytych wymiarów semantycznych
lsa_model <- lsa(exp_matrix)
# załadowanie bibliotek
library(tm)
library(hunspell)
library(topicmodels)
library(wordcloud)
library(lsa)
library(proxy)
library(dendextend)
library(corrplot)
library(flexclust)
# kolory
cols = c("lightsteelblue", "orchid", "royalblue","darkseagreen1", "cyan4", "navy" , "mediumpurple1")
### Redukcja wymiarów macierzy ###
#przygotowanie
clusters_pattern <- c(1,1,1,1,2,2,2,2,3,3,3,3,5,5,5,5,6,6,6,6)
cols_pattern <- cols[clusters_pattern]
names(clusters_pattern) <- doc_names
names(cols_pattern) <- doc_names
# utworzenie katalogu na wyniki
reduction_dir <- "./reduction"
dir.create(reduction_dir)
# legenda
#matrix
doc_names <- rownames(dtm_tf_all)
doc_count <- length(doc_names)
legend <- paste(
paste(
"d",
1:doc_count,
sep = ""
),
doc_names,
sep = " -> "
)
options(scipen = 5)
#experiment matrix
exp_matrix <- dtm_tf_all
#exp_matrix <- dtm_tf_612
#exp_matrix <- dtm_tfidf_410
## Analiza głównych składowych
pca_model <- prcomp(exp_matrix)
x <- pca_model$x[,1]
y <- pca_model$x[,2]
plot_file <- paste(
reduction_dir,
"pca.png",
sep = "/"
)
png(plot_file, width = 800)
par(mar = c(4, 4, 4, 25), xpd = TRUE)
plot(
x,
y,
main = "Analiza głównych składowych",
xlab = "PC1",
ylab = "PC2",
col = cols_pattern,
pch = 16
)
text(
x,
y,
paste(
"d",
1:doc_count,
sep = ""
),
col = cols_pattern,
pos = 1
)
legend(
"topright",
inset = c(-0.9, 0.1),
legend,
text.col = cols_pattern
)
dev.off()
### Dekompozycja według wartości osobliwych ###
#experiment matrix
exp_matrix <- tdm_tf_all
#exp_matrix <- tdm_tf_612
#exp_matrix <- tdm_tfidf_410
# analiza ukrytych wymiarów semantycznych
lsa_model <- lsa(exp_matrix)
coord_docs <- lsa_model$dk%*%diag(lsa_model$sk)
coord_terms <- lsa_model$tk%*%diag(lsa_model$sk)
terms_importance <- diag(
lsa_model$tk%*%diag(lsa_model$sk)%*%t(diag(lsa_model$sk))%*%t(lsa_model$tk)
)
important_terms <- names(
tail(
sort(terms_importance),
30
)
)
own_terms <- c("daenerys", "jon", "cersei", "eragon", "bilbo", "yennefer", "ciri", "jaskier", "geralt", "frodo", "gandalf", "halt", "ork", "horace")
#own_terms <- c("elf", "czarodziej", "smok", "brat", "arya", "cel", "dawny")
#own_terms <- c("catelyn", "brama", "bohater", "bagginsa", "bronić","bezpieczny", "atakować")
current_terms <- own_terms
x1 <- coord_docs[,1]
y1 <- coord_docs[,2]
x2 <- coord_terms[current_terms,1]
y2 <- coord_terms[current_terms,2]
plot_file <- paste(
reduction_dir,
"lsa.png",
sep = "/"
)
png(plot_file, width = 800)
par(mar = c(4, 4, 4, 25), xpd = TRUE)
plot(
x1,
y1,
main = "Analiza ukrytych wymiarów semantycznych",
xlab = "SD1",
ylab = "SD2",
col = cols_pattern,
pch = 16
)
text(
x1,
y1,
paste(
"d",
1:doc_count,
sep = ""
),
col = cols_pattern,
pos = 1
)
points(
x2,
y2,
pch = 15,
col = "mediumvioletred"
)
text(
x2,
y2,
rownames(coord_terms[current_terms,]),
col = "mediumvioletred",
pos = 2
)
legend(
"topright",
inset = c(-0.9, 0.1),
legend,
text.col = cols_pattern
)
dev.off()
### Redukcja wymiarów macierzy ###
#przygotowanie
clusters_pattern <- c(1,1,1,1,2,2,2,2,3,3,3,3,5,5,5,5,6,6,6,6)
cols_pattern <- cols[clusters_pattern]
names(clusters_pattern) <- doc_names
names(cols_pattern) <- doc_names
# utworzenie katalogu na wyniki
reduction_dir <- "./reduction"
dir.create(reduction_dir)
# legenda
#matrix
doc_names <- rownames(dtm_tf_all)
doc_count <- length(doc_names)
legend <- paste(
paste(
"d",
1:doc_count,
sep = ""
),
doc_names,
sep = " -> "
)
options(scipen = 5)
#experiment matrix
#exp_matrix <- dtm_tf_all
exp_matrix <- dtm_tf_612
#exp_matrix <- dtm_tfidf_410
## Analiza głównych składowych
pca_model <- prcomp(exp_matrix)
x <- pca_model$x[,1]
y <- pca_model$x[,2]
plot_file <- paste(
reduction_dir,
"pca.png",
sep = "/"
)
png(plot_file, width = 800)
par(mar = c(4, 4, 4, 25), xpd = TRUE)
plot(
x,
y,
main = "Analiza głównych składowych",
xlab = "PC1",
ylab = "PC2",
col = cols_pattern,
pch = 16
)
text(
x,
y,
paste(
"d",
1:doc_count,
sep = ""
),
col = cols_pattern,
pos = 1
)
legend(
"topright",
inset = c(-0.9, 0.1),
legend,
text.col = cols_pattern
)
dev.off()
### Dekompozycja według wartości osobliwych ###
#experiment matrix
#exp_matrix <- tdm_tf_all
exp_matrix <- tdm_tf_612
#exp_matrix <- tdm_tfidf_410
# analiza ukrytych wymiarów semantycznych
lsa_model <- lsa(exp_matrix)
coord_docs <- lsa_model$dk%*%diag(lsa_model$sk)
coord_terms <- lsa_model$tk%*%diag(lsa_model$sk)
terms_importance <- diag(
lsa_model$tk%*%diag(lsa_model$sk)%*%t(diag(lsa_model$sk))%*%t(lsa_model$tk)
)
important_terms <- names(
tail(
sort(terms_importance),
30
)
)
#own_terms <- c("daenerys", "jon", "cersei", "eragon", "bilbo", "yennefer", "ciri", "jaskier", "geralt", "frodo", "gandalf", "halt", "ork", "horace")
own_terms <- c("elf", "czarodziej", "smok", "brat", "arya", "cel", "dawny")
#own_terms <- c("catelyn", "brama", "bohater", "bagginsa", "bronić","bezpieczny", "atakować")
current_terms <- own_terms
x1 <- coord_docs[,1]
y1 <- coord_docs[,2]
x2 <- coord_terms[current_terms,1]
y2 <- coord_terms[current_terms,2]
plot_file <- paste(
reduction_dir,
"lsa.png",
sep = "/"
)
png(plot_file, width = 800)
par(mar = c(4, 4, 4, 25), xpd = TRUE)
plot(
x1,
y1,
main = "Analiza ukrytych wymiarów semantycznych",
xlab = "SD1",
ylab = "SD2",
col = cols_pattern,
pch = 16
)
text(
x1,
y1,
paste(
"d",
1:doc_count,
sep = ""
),
col = cols_pattern,
pos = 1
)
points(
x2,
y2,
pch = 15,
col = "mediumvioletred"
)
text(
x2,
y2,
rownames(coord_terms[current_terms,]),
col = "mediumvioletred",
pos = 2
)
legend(
"topright",
inset = c(-0.9, 0.1),
legend,
text.col = cols_pattern
)
dev.off()
# legenda
#matrix
doc_names <- rownames(dtm_tf_all)
doc_count <- length(doc_names)
legend <- paste(
paste(
"d",
1:doc_count,
sep = ""
),
doc_names,
sep = " -> "
)
options(scipen = 5)
#experiment matrix
#exp_matrix <- dtm_tf_all
#exp_matrix <- dtm_tf_612
exp_matrix <- dtm_tfidf_410
## Analiza głównych składowych
pca_model <- prcomp(exp_matrix)
x <- pca_model$x[,1]
y <- pca_model$x[,2]
plot_file <- paste(
reduction_dir,
"pca.png",
sep = "/"
)
png(plot_file, width = 800)
par(mar = c(4, 4, 4, 25), xpd = TRUE)
plot(
x,
y,
main = "Analiza głównych składowych",
xlab = "PC1",
ylab = "PC2",
col = cols_pattern,
pch = 16
)
text(
x,
y,
paste(
"d",
1:doc_count,
sep = ""
),
col = cols_pattern,
pos = 1
)
legend(
"topright",
inset = c(-0.9, 0.1),
legend,
text.col = cols_pattern
)
dev.off()
### Dekompozycja według wartości osobliwych ###
#experiment matrix
#exp_matrix <- tdm_tf_all
#exp_matrix <- tdm_tf_612
exp_matrix <- tdm_tfidf_410
# analiza ukrytych wymiarów semantycznych
lsa_model <- lsa(exp_matrix)
coord_docs <- lsa_model$dk%*%diag(lsa_model$sk)
coord_terms <- lsa_model$tk%*%diag(lsa_model$sk)
terms_importance <- diag(
lsa_model$tk%*%diag(lsa_model$sk)%*%t(diag(lsa_model$sk))%*%t(lsa_model$tk)
)
important_terms <- names(
tail(
sort(terms_importance),
30
)
)
#own_terms <- c("daenerys", "jon", "cersei", "eragon", "bilbo", "yennefer", "ciri", "jaskier", "geralt", "frodo", "gandalf", "halt", "ork", "horace")
#own_terms <- c("elf", "czarodziej", "smok", "brat", "arya", "cel", "dawny")
own_terms <- c("catelyn", "brama", "bohater", "bagginsa", "bronić","bezpieczny", "atakować")
current_terms <- own_terms
x1 <- coord_docs[,1]
y1 <- coord_docs[,2]
x2 <- coord_terms[current_terms,1]
y2 <- coord_terms[current_terms,2]
plot_file <- paste(
reduction_dir,
"lsa.png",
sep = "/"
)
png(plot_file, width = 800)
par(mar = c(4, 4, 4, 25), xpd = TRUE)
plot(
x1,
y1,
main = "Analiza ukrytych wymiarów semantycznych",
xlab = "SD1",
ylab = "SD2",
col = cols_pattern,
pch = 16
)
text(
x1,
y1,
paste(
"d",
1:doc_count,
sep = ""
),
col = cols_pattern,
pos = 1
)
points(
x2,
y2,
pch = 15,
col = "mediumvioletred"
)
text(
x2,
y2,
rownames(coord_terms[current_terms,]),
col = "mediumvioletred",
pos = 2
)
legend(
"topright",
inset = c(-0.9, 0.1),
legend,
text.col = cols_pattern
)
dev.off()
load("C:/Users/krawi/OneDrive/Pulpit/Studia/Studia24/Przetwarzanie języka naturalnego/Projekt zaliczeniowy/.RData")
View(dtm_tf_all_m)
View(dtm_tf_all_m)
